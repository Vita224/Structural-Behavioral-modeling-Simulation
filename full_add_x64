`timescale 1ns / 1ps

module full_add_x64 (
    input logic [63:0] a, b,
    input logic cin,
    output logic [63:0] sum,
    output logic cout
);

    logic [31:0] sum_0, sum_1;
    logic cout_0;
    
    // Instancias de sumador de 32 bits para los bits menos significativos
    full_add_x32 full_add_x32_inst0 (.a(a[31:0]), .b(b[31:0]), .cin(cin), .sum(sum_0), .cout(cout_0)); 
    
    // Instancias de sumador de 32 bits para los bits m√°s significativos
    full_add_x32 full_add_x32_inst1 (.a(a[63:32]), .b(b[63:32]), .cin(cout_0), .sum(sum_1), .cout(cout));
    
    // Combinar las sumas de los sumadores de 32 bits
    assign sum = {sum_1, sum_0};
    
endmodule
